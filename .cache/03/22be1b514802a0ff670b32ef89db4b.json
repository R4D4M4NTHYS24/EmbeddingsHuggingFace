{"id":"../node_modules/onnxruntime-common/dist/lib/backend.js","dependencies":[{"name":"C:\\sistemas-expertos\\IA\\embeddingsHuggingParcel\\node_modules\\onnxruntime-common\\dist\\lib\\backend.js.map","includedInParent":true,"mtime":1705068292405},{"name":"C:\\sistemas-expertos\\IA\\embeddingsHuggingParcel\\node_modules\\onnxruntime-common\\lib\\backend.ts","includedInParent":true,"mtime":1705068292643},{"name":"C:\\sistemas-expertos\\IA\\embeddingsHuggingParcel\\package.json","includedInParent":true,"mtime":1705508313228},{"name":"C:\\sistemas-expertos\\IA\\embeddingsHuggingParcel\\.browserslistrc","includedInParent":true,"mtime":1705506676578},{"name":"C:\\sistemas-expertos\\IA\\embeddingsHuggingParcel\\node_modules\\onnxruntime-common\\package.json","includedInParent":true,"mtime":1705068292376},{"name":"./backend-impl","loc":{"line":3,"column":32,"index":128},"parent":"C:\\sistemas-expertos\\IA\\embeddingsHuggingParcel\\node_modules\\onnxruntime-common\\dist\\lib\\backend.js","resolved":"C:\\sistemas-expertos\\IA\\embeddingsHuggingParcel\\node_modules\\onnxruntime-common\\dist\\lib\\backend-impl.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"registerBackend\", {\n  enumerable: true,\n  get: function () {\n    return _backendImpl.registerBackend;\n  }\n});\nvar _backendImpl = require(\"./backend-impl\");"},"sourceMaps":{"js":{"mappings":[{"source":"../../lib/backend.ts","name":null,"original":{"line":49,"column":0},"generated":{"line":12,"column":0}},{"source":"../../lib/backend.ts","name":null,"original":{"line":49,"column":0},"generated":{"line":12,"column":4}},{"source":"../../lib/backend.ts","name":null,"original":{"line":49,"column":0},"generated":{"line":12,"column":16}},{"source":"../../lib/backend.ts","name":null,"original":{"line":49,"column":0},"generated":{"line":12,"column":19}},{"source":"../../lib/backend.ts","name":null,"original":{"line":49,"column":0},"generated":{"line":12,"column":26}}],"sources":{"../../lib/backend.ts":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from './inference-session';\nimport {OnnxValue} from './onnx-value';\n\n/**\n * @internal\n */\nexport declare namespace SessionHandler {\n  type FeedsType = {[name: string]: OnnxValue};\n  type FetchesType = {[name: string]: OnnxValue | null};\n  type ReturnType = {[name: string]: OnnxValue};\n}\n\n/**\n * Represent a handler instance of an inference session.\n *\n * @internal\n */\nexport interface SessionHandler {\n  dispose(): Promise<void>;\n\n  readonly inputNames: readonly string[];\n  readonly outputNames: readonly string[];\n\n  startProfiling(): void;\n  endProfiling(): void;\n\n  run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType,\n      options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType>;\n}\n\n/**\n * Represent a backend that provides implementation of model inferencing.\n *\n * @internal\n */\nexport interface Backend {\n  /**\n   * Initialize the backend asynchronously. Should throw when failed.\n   */\n  init(): Promise<void>;\n\n  createSessionHandler(uriOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler>;\n}\n\nexport {registerBackend} from './backend-impl';\n"},"lineCount":null}},"error":null,"hash":"2b5e9aaf38cef92c3db301c0bb169ecf","cacheData":{"env":{}}}